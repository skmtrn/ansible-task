- name: 
  hosts: all
  become: true
  tasks:
    - name: Check if Docker is installed
      shell: docker --version
      register: docker_output
      ignore_errors: 'yes'
      changed_when: false
    - name: Install Docker
      shell: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo usermod -aG docker $USER
      when: docker_output.rc != 0
    - name: Print Docker version
      debug:
        var: docker_output.stdout_lines
    - name: Check if Docker Compose is installed
      shell: docker-compose --version
      register: docker_compose_output
      ignore_errors: 'yes'
      changed_when: false
    - name: Install Docker Compose
      shell: >
        sudo curl -L "https://github.com/docker/compose/releases/download/{{
        docker_compose_version }}/docker-compose-$(uname -s)-$(uname -m)" -o
        /usr/local/bin/docker-compose

        sudo chmod +x /usr/local/bin/docker-compose
      vars:
        docker_compose_version: 1.29.2
      when: docker_compose_output.rc != 0
    - name: Print Docker Compose version
      debug:
        var: docker_compose_output.stdout_lines

    - name: Install Python 3 pip
      package:
        name: python3-pip
        state: present

    - name: Install pyopenssl
      pip:
        name: pyopenssl
        executable: pip3
        state: latest

    - name: Install Docker Python module
      pip:
        name: docker
        executable: pip3
        state: present
    - name: Install Docker-Compose Python module
      pip:
        name: docker-compose
        executable: pip3
        state: present
- name: Install the app
  hosts: all
  become: true
  tasks:
    - name: Clone a github repository
      git:
        repo: 'https://github.com/docker/getting-started'
        dest: /var/local/todo-app
        clone: 'yes'
        update: 'yes'
        force: true
    - name: Generate modified docker-compose.yml based on the template
      template:
        src: docker-compose.yml.j2
        dest: /var/local/todo-app/app/docker-compose.yml
    - name: Run the docker-compose
      docker_compose:
        project_name: todo-app
        project_src: /var/local/todo-app/app/
        state: present
    - name: Fetch running Docker containers
      command: 'docker ps --format "{{ ''{{'' }} .Names {{ ''}}'' }}"'
      register: running_containers
    - name: Print running docker containers
      debug:
        msg: '{{running_containers.stdout_lines}}'
    - name: Wait for the app to respond
      wait_for:
        host: 'localhost'
        port: '{{ hostvars[inventory_hostname][''app_port''] }}'
        timeout: 120
      register: result
    - name: Print status
      debug:
        msg: >-
          Web server is {{ 'running' if result is succeeded else 'not running'
          }}

